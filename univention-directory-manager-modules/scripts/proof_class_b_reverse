#!/usr/bin/python2.4
# -*- coding: utf-8 -*-
#
# Univention Directory Manager Modules
#  Script for converting wrong class b network entries
#
# Copyright (C) 2004-2009 Univention GmbH
#
# http://www.univention.de/
# 
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# Binary versions of this file provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


import ldap, string, sys

import univention.baseconfig

baseConfig=univention.baseconfig.baseConfig()
baseConfig.load()

baseDN=baseConfig['ldap/base']

if baseConfig['interfaces/eth0/netmask'] != "255.255.0.0":
	print 'Only for Class B'
	sys.exit(1)

lo=ldap.open('localhost', 389)
bindpw=open('/etc/ldap.secret').read()
if bindpw[-1] == '\n':
        bindpw=bindpw[0:-1]
	lo.simple_bind_s("cn=admin,"+baseDN, bindpw)

computers=lo.search_s(baseDN, ldap.SCOPE_SUBTREE, 'objectClass=univentionHost', ['aRecord'])

for i in range(0,len(computers)):
	print 'DN: %s' % computers[i][0]
	if computers[i][1].has_key('aRecord'):
		entry=computers[i][1]['aRecord'][0].split('.')[2:4]
		reverse=lo.search_s('cn=dns,%s' %baseDN, ldap.SCOPE_SUBTREE, '(&(relativeDomainName=%s)(pTRRecord=%s*))' % (string.join(entry,'.'),ldap.explode_dn(computers[i][0],1)[0]))
		if len(reverse) != 0:
			print 'Wrong DNS Reverse Entry for %s: %s' % (computers[i][0], reverse[0][0])
			entry.reverse()
			entry=string.join(entry,'.')
			lo.modrdn_s(reverse[0][0],'relativeDomainName=%s' % entry)


