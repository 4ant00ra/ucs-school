#!/bin/sh
#
#

LOGFILE=/var/log/sfb/sfb-rmm-daemon.log
PIDFILE=/var/run/sfb-rmm-daemon.pid

if [ -e $PIDFILE ] ; then
  echo "$0 already running - if not, please remove $PIDFILE" >> $LOGFILE
  echo "$0 already running - if not, please remove $PIDFILE" >&2
  echo "$0 already running - if not, please remove $PIDFILE"
  exit 1
fi

trap 'rm -f $PIDFILE; exit 0' 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15

echo $$ > $PIDFILE
echo "$0 running - pid $$" >> $LOGFILE

eval `univention-config-registry shell`

if [ -z "$restoremanagement_policy" ] ; then
	echo "config-registry variable restoremanagement/policy is not set!" >> $LOGFILE
	echo "config-registry variable restoremanagement/policy is not set!" >&2
	exit 1
fi

if [ -z "$restoremanagement_pattern" ] ; then
	echo "config-registry variable restoremanagement/pattern is not set!" >> $LOGFILE
	echo "config-registry variable restoremanagement/pattern is not set!" >&2
	exit 1
fi

while true; do
	read </var/log/univention/pipes/syslog.pipe zeile
	if echo $zeile | egrep ".*tftpd\[[0-9]+\]: Serving " ; then
		if echo $zeile | egrep ": Serving $restoremanagement_pattern " ; then
			ARECORD=$(echo $zeile | sed -re 's|.* to ([.0-9]+):[0-9]+|\1|')

			if [ "$restoremanagement_debug" = "1" ] ; then
				echo -n "Host ${ARECORD}: " >> $LOGFILE
			fi
			DN=$(ldapsearch -x "(&(objectClass=univentionWindows)(aRecord=${ARECORD}))" dn | ldapsearch-wrapper | grep ^dn | sed -e 's|dn: ||')

			if [ -z "$DN" ] ; then
				echo "DN for ${ARECORD} not found!" >> $LOGFILE
			else
				HOSTPASSWD=$(cat /etc/machine.secret)
				univention-directory-manager computers/windows modify --binddn "$ldap_hostdn" --bindpwd "$HOSTPASSWD" --dn "$DN" --customattribute Neuinstallation="0" 2>&1 >> $LOGFILE
			fi
		fi
	fi
done
