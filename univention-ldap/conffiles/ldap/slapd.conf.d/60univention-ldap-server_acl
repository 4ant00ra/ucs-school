@!@
ldap_base=baseConfig['ldap/base']
address=baseConfig['interfaces/eth0/address']
if baseConfig['ldap/server/type']=="master":
	usr="write"
else:
	usr="read"

print 'sasl-regexp'
print '    uid=(.*),cn=gssapi,cn=auth'
print '    ldap:///"%s"??sub?uid=$1' % (ldap_base)
print

print 'access to *'
print '   by * none break'
print

print 'access to *'
print '   by dn.base="cn=admin,%s" %s' % (ldap_base, usr)
print '   by dn.base="cn=backup,%s" read' % (ldap_base)
print '   by dn.base="uid=join-user,cn=users,%s" read' % (ldap_base)
print '   by dn.base="uid=Administrator,cn=users,%s" %s' % (ldap_base, usr)
print '   by dn.base="uid=root,cn=users,%s" %s' % (ldap_base, usr)
print '   by sockname="PATH=/var/run/slapd/ldapi" %s' % (usr)
print '   by * none break'
print

print 'access to attrs=userPassword'
print '   by anonymous auth'
print

print 'access to attrs=entry,objectClass,posixAccount,posixGroup,uniqueMember,ou'
print '   by anonymous peername=%s read' % (address)
print '   by anonymous peername=127.0.0.1 read'
print '   by * none break'
print

print 'access to *'
print '   by set="user & [cn=Domain Admins,cn=groups,%s]/uniqueMember*" %s' % ( ldap_base, usr )
#print '   by group="cn=Domain Admins,cn=groups,%s" %s' % (ldap_base, usr)
print '   by dn.base="uid=root,cn=users,%s" %s' % (ldap_base, usr)
print '   by group="cn=Slave Join,cn=groups,%s" %s' % (ldap_base, usr)
print '   by * none break'
print

print 'access to dn.regex="uid=.*,%s" attrs=krb5Key,userPassword,sambaNTPassword,sambaLMPassword' % (ldap_base)
print '   by dn.regex=".*,cn=dc,cn=computers,%s" %s' % (ldap_base, usr)
print

print 'access to dn.regex="cn=.*,cn=computers,%s"' % (ldap_base)
print '   by dn.regex="cn=.*,cn=dc,cn=computers,%s" %s' % (ldap_base, usr)
print

print 'access to dn.base="cn=admin,%s"' % (ldap_base)
print '   by self %s' % (usr)
print '   by * none'
print
      
print 'access to attrs=entry,cn,uid,namingContexts,univentionPolicyReference,requiredObjectClasses,prohibitedObjectClasses,fixedAttributes,univentionHomeShare'
print '          attrs=dhcpHWAddress,dhcpNetMask,univentionDhcpFixedAddress,dhcpServiceDN'
print '          attrs=zoneName,relativeDomainName,dNSTTL,nSRecord,sOARecord,pTRRecord,sRVRecord,cNAMERecord,aRecord,univentionDesktopBackground'
print '          attrs=univentionLicenseEndDate,univentionLicenseModule,univentionLicenseBaseDN,univentionLicenseSignature'
print '          attrs=univentionXColorDepth,univentionXMouseProtocol,univentionXMouseDevice,univentionXKeyboardLayout'
print '          attrs=univentionXKeyboardVariant,univentionXHSync,univentionXVRefresh,univentionXModule,univentionXResolution'
print '          attrs=univentionSoundEnabled,univentionSoundModule'
print '          attrs=univentionPolicyObject,univentionDnsObject,univentionDhcpObject,univentionUsersObject,univentionGroupsObject,univentionComputersObject,univentionLicenseObject'
print '          attrs=univentionDesktopServer,univentionFileServer,univentionWindowsTerminalServer,univentionWindowsDomain'
print '          attrs=univentionDesktopLanguage,univentionDesktopIcons,univentionDesktopTheme,univentionDesktopWindowBorders,univentionDesktopIconsTheme,univentionDesktopProfile'
print '          attrs=univentionDhcpDomainName,univentionDhcpDomainNameServers,univentionDhcpRouters,univentionDhcpBootServer,univentionDhcpBootFilename'
print '          attrs=univentionDhcpNetbiosNameServers,univentionDhcpNetbiosScope,univentionDhcpNetbiosNodeType,univentionDhcpUnknownClients,univentionDhcpBootp'
print '          attrs=univentionDhcpBooting,univentionDhcpDuplicates,univentionDhcpDeclines,univentionDhcpAuthoritative,univentionDhcpBootUnknownClients'
print '          attrs=univentionDhcpPingCheck,univentionDhcpGetLeaseHostnames,univentionDhcpServerIdentifier,univentionDhcpServerName,univentionDhcpVendorOptionSpace'
print '          attrs=univentionDhcpLeaseTimeDefault,univentionDhcpLeaseTimeMax,univentionDhcpLeaseTimeMin,univentionDhcpDdnsHostname,univentionDhcpDdnsDomainname'
print '          attrs=univentionDhcpDdnsRevDomainname,univentionDhcpDdnsUpdates,univentionDhcpDdnsUpdateStyle,univentionDhcpDoForwardUpdates'
print '          attrs=univentionDhcpUpdateStaticLeases,univentionDhcpClientUpdates'
print '   by * read'
print

print 'access to dn="cn=subSchema"'
print '   by * read'
print

if baseConfig['ldap/server/type']=="master":
	print "replogfile /var/lib/univention-ldap/replog/replog"
elif baseConfig.has_key('ldap/replog') and (baseConfig['ldap/replog'].lower == 'true' or baseConfig['ldap/replog'].lower == 'yes'):
	print "replogfile /var/lib/univention-ldap/replog/replog"
print "include /etc/ldap/replica.conf"
@!@
