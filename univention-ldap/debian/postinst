#!/bin/sh
#
# Univention LDAP Server
#  postinst script for the debian package
#
# Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# Binary versions of this file provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

set -e

touch /etc/ldap/rootpw.conf

test -f /var/lib/univention-ldap/replog/replog || \
	touch /var/lib/univention-ldap/replog/replog
chmod 0600 /var/lib/univention-ldap/replog/replog
test -f /var/lib/univention-ldap/replog/replog.lock || \
	touch /var/lib/univention-ldap/replog/replog.lock


univention-baseconfig set ldap/autostart?yes

#DEBHELPER#

eval `univention-baseconfig shell server/role`

univention-baseconfig set ldap/debug/level?0
univention-baseconfig set ldap/port?389
univention-baseconfig set ldap/database/type?bdb
univention-baseconfig set ldap/index/eq?"objectClass,uidNumber,gidNumber,memberUid,ou,uid,cn,sn,givenName,mail,description,displayName,sambaSID,sambaPrimaryGroupSID,sambaDomainName,uniqueMember,macAddress,dhcpHWAddress,krb5PrincipalName,aRecord,relativeDomainName,pTRRecord,zoneName,mailPrimaryAddress,mailAlternativeAddress,univentionServerRole,univentionService,kolabHomeServer,automountInformation,sambaAcctFlags,univentionPolicyReference"
univention-baseconfig set ldap/index/pres?"objectClass,uidNumber,gidNumber,memberUid,ou,uid,cn,sn,givenName,mail,description,displayName,uniqueMember,macAddress,dhcpHWAddress,krb5PrincipalName,aRecord,mailPrimaryAddress,mailAlternativeAddress,kolabHomeServer,univentionPolicyReference"
univention-baseconfig set ldap/index/sub?"uid,cn,sn,givenName,mail,description,displayName,mailPrimaryAddress,mailAlternativeAddress,default,zoneName,sambaSID"
univention-baseconfig set ldap/index/approx?"none"
univention-baseconfig set ldap/sizelimit?400000
univention-baseconfig set ldap/cachesize?10000000
univention-baseconfig set ldap/threads?16
univention-baseconfig set ldap/page-results?on
univention-baseconfig set ldap/acl/user/kolab2/change?yes
univention-baseconfig set ldap/acl/user/password/change?no

univention-baseconfig set ldap/database/bdb/db_config_options?"set_flags"
univention-baseconfig set ldap/database/bdb/set_flags?"DB_LOG_AUTOREMOVE"


if [ "$server_role" = "domaincontroller_master" ]; then
	univention-baseconfig set ldap/translogfile?"/var/lib/univention-ldap/listener/listener"
fi

test -f /var/lib/univention-ldap/ldap/DB_CONFIG || univention-baseconfig commit /var/lib/univention-ldap/ldap/DB_CONFIG

if [ "$server_role" = "domaincontroller_master" ] || [ "$server_role" = "domaincontroller_backup" ]; then
	/usr/lib/univention-install/01univention-ldap-server-init.inst || true
	/usr/lib/univention-install/10univention-ldap-server.inst || true
fi

if [ "$1" = "configure" -a -n "$2" ];
	then
	if test -x /etc/init.d/slapd
		then
        # always start on master, slapd may be down by schema-conflicts which are cleared by a new slapd.conf-template
		if [ "$server_role" = "domaincontroller_master" ]
			then
			/etc/init.d/slapd stop
			sleep 1
			if [ -n "$(pidof slapd)" ]; then
				killall slapd
				sleep 1
				if [ -n "$(pidof slapd)" ]; then
					killall -9 slapd
					sleep 1
				fi
			fi
			/etc/init.d/slapd start
		else
			/etc/init.d/slapd crestart
		fi
	fi
else
	if [ "$1" = "configure" ]
		then
		if test -x /etc/init.d/slapd
			then
			/etc/init.d/slapd start
		fi
	fi
fi

if [ "$1" = configure -a -z "$2" ]; then
	# only set this for new installations
	univention-baseconfig set ldap/index/approx="uid,mail,alias,cn,sn,givenName"
fi

if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.12; then
	eval `univention-baseconfig shell hostname ldap/base server/role`
	if [ "$server_role" = "domaincontroller_master" ]; then
		univention-baseconfig set ldap/hostdn="cn=$hostname,cn=dc,cn=computers,$ldap_base"
	fi
fi
if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.18; then
	eval `univention-baseconfig shell hostname domainname server/role ldap/base`
	if [ "$server_role" = "domaincontroller_master" ]; then
		/usr/share/univention-admin-tools/univention-dnsedit --ignore-exists $domainname add srv domaincontroller_master tcp 0 0 0 $hostname.$domainname.
	fi
fi

if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.19; then
	eval `univention-baseconfig shell hostname domainname server/role ldap/base`
	if [ "$server_role" = "domaincontroller_master" ]; then
		univention-admin container/cn create --ignore_exists --set name=mac --position="cn=temporary,cn=univention,$ldap_base" || true
	fi
fi

if [ "$1" = "configure" -a -n "$2" ]; then
	eval `univention-baseconfig shell hostname domainname server/role ldap/base`
	if [ "$server_role" = "domaincontroller_master" ]; then
		univention-admin container/cn create --ignore_exists --position "cn=computers,$ldap_base" --set name=memberserver || true
	fi
fi

if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.21; then
	eval `univention-baseconfig shell hostname domainname server/role ldap/base`
	if [ "$server_role" = "domaincontroller_master" ]; then
		univention-admin container/cn create --ignore_exists --set name=shares --position="cn=policies,$ldap_base" || true
		univention-admin container/cn create --ignore_exists --set name=userquota --position="cn=shares,cn=policies,$ldap_base" || true
	fi
fi

if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.25; then
	eval `univention-baseconfig shell hostname domainname server/role ldap/base`
	if [ "$server_role" = "domaincontroller_master" ]; then
		univention-admin container/cn create --ignore_exists --set name=packages --position="cn=univention,$ldap_base" || true
		univention-admin container/cn create --ignore_exists --set name=ldap --position="cn=policies,$ldap_base" || true
		univention-admin container/cn create --ignore_exists --set name=update --position="cn=policies,$ldap_base" || true
		univention-admin container/cn create --ignore_exists --set name=installation --position="cn=update,cn=policies,$ldap_base" || true
		univention-admin container/cn create --ignore_exists --set name=packages --position="cn=update,cn=policies,$ldap_base" || true
		univention-admin container/cn create --ignore_exists --set name=repository --position="cn=update,cn=policies,$ldap_base" || true
		univention-admin settings/packages create --superordinate cn=packages,cn=univention,$ldap_base --set name=Univention \
							--append packageList=univention-samba \
							--append packageList=univention-windows-installer \
							--append packageList=univention-dhcp \
							--append packageList=univention-bind \
							--append packageList=univention-bind-proxy \
							--append packageList=univention-thin-client \
							--append packageList=univention-application-server \
							--append packageList=univention-kde \
							--append packageList=univention-ooffice \
							--append packageList=univention-mozilla \
							--append packageList=univention-mozilla-german \
							--append packageList=univention-fax-client \
							--append packageList=univention-fax-server \
							--append packageList=univention-mail-postfix \
							--append packageList=univention-mail-cyrus \
							--append packageList=univention-squid \
							--append packageList=univention-spamassassin \
							--append packageList=univention-admin \
							--append packageList=unidump \
							--append packageList=univention-printserver \
							--append packageList=univention-x-core \
							--append packageList=univention-net-installer \
							--append packageList=univention-printquota \
							--append packageList=univention-isdn \
							--append packageList=univention-5250 \
							--append packageList=univention-samba-slave-pdc

	univention-admin settings/packages create --superordinate cn=packages,cn=univention,$ldap_base --set name=Debian \
							--append packageList=mutt \
							--append packageList=mc \
							--append packageList=build-essential \
							--append packageList=rdesktop
	fi
fi

if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.37; then
	eval `univention-baseconfig shell hostname domainname server/role ldap/base`
	if [ "$server_role" = "domaincontroller_master" ]; then
		univention-admin container/cn create --ignore_exists --set name=mail --position="cn=policies,$ldap_base" || true
	fi
fi

if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.34; then
	eval `univention-baseconfig shell hostname domainname server/role ldap/base`
	if [ "$server_role" = "domaincontroller_master" ]; then
		if [ -e /var/lib/univention-ldap/schema/id/id ]; then
			id=`cat /var/lib/univention-ldap/schema/id/id`
			id=$((id+100))
			echo -n "$id" >/var/lib/univention-ldap/schema/id/id
		fi

		tmp_file=`mktemp`
		echo "dn: $ldap_base"							>>$tmp_file
		echo "changetype: modify"						>>$tmp_file
		echo "add: objectClass"							>>$tmp_file
		echo "objectClass: univentionBase"				>>$tmp_file
		ldapmodify -x -D "cn=admin,$ldap_base" -w `cat /etc/ldap.secret` -f $tmp_file
		rm $tmp_file

		res=`ldapsearch -x -s base -LLL '(&(nisDomain=@*)(associatedDomain=@*))'`
		if [ -n "$res" ]; then
			tmp_file=`mktemp`
			echo "dn: $ldap_base"							>>$tmp_file
			echo "changetype: modify"						>>$tmp_file
			echo "replace: nisDomain"						>>$tmp_file
			echo "nisDomain: $domainname"					>>$tmp_file
			echo "-"										>>$tmp_file
			echo "replace: associatedDomain"				>>$tmp_file
			echo "associatedDomain: $domainname"			>>$tmp_file
			ldapmodify -x -D "cn=admin,$ldap_base" -w `cat /etc/ldap.secret` -f $tmp_file
			rm $tmp_file
		fi
	fi
fi

if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.28; then
	eval `univention-baseconfig shell hostname domainname server/role ldap/base`
	if [ "$server_role" = "domaincontroller_master" ]; then
		#create idmap folder
		univention-admin container/cn create --position "cn=univention,$ldap_base" --set name=idmap

		tmp_file=`mktemp`
		echo "dn: cn=nextUnixId,cn=idmap,cn=univention,$ldap_base"    >>$tmp_file
		echo "objectClass: top"                                       >>$tmp_file
		echo "objectClass: organizationalRole"                        >>$tmp_file
		echo "objectClass: sambaUnixIdPool"                           >>$tmp_file
		echo "cn: nextUnixId"                                         >>$tmp_file
		echo "uidNumber: 55000"                                       >>$tmp_file
		echo "gidNumber: 55000"                                       >>$tmp_file
		ldapadd -x -D "cn=admin,$ldap_base" -w `cat /etc/ldap.secret` -f $tmp_file
		rm $tmp_file
	fi
fi
if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.34; then
	eval `univention-baseconfig shell hostname domainname server/role ldap/base`
	if [ "$server_role" = "domaincontroller_master" ]; then
	univention-admin container/cn create --ignore_exists --set name=printquota --position="cn=shares,cn=policies,$ldap_base" || true
	univention-admin container/cn create --ignore_exists --set name=groupName --position="cn=temporary,cn=univention,$ldap_base" || true
	univention-admin settings/printeruri create --ignore_exists --set name=printeruris --superordinate="cn=cups,cn=univention,$ldap_base" --append printeruri="lpd://" --append printeruri="ipp://" --append printeruri="http://" --append printeruri="usb:/" --append printeruri="socket://" --append printeruri="parallel:/" --append printeruri="file:/" --append printeruri="smb://"|| true

	fi
fi

if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.34; then
	eval `univention-baseconfig shell hostname domainname server/role ldap/base`
	if [ "$server_role" = "domaincontroller_master" ]; then
		univention-admin container/cn create --ignore_exists --set name=samba || true
	fi
fi
if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.41-28; then
	eval `univention-baseconfig shell hostname domainname server/role ldap/base`
	if [ "$server_role" = "domaincontroller_master" ]; then
		univention-admin container/cn create --ignore_exists --set name=admin-settings --position cn=univention,$ldap_base
		univention-admin container/cn create --ignore_exists --set name=services --position cn=univention,$ldap_base
		univention-admin settings/service create --ignore_exists --set name=kolab2 --position cn=services,cn=univention,$ldap_base

		univention-admin container/cn create --ignore_exists --set name=mailPrimaryAddress --position="cn=temporary,cn=univention,$ldap_base"

		univention-admin container/cn create --ignore_exists  --position "$ldap_base" --set name="mail"
		univention-admin container/cn create --ignore_exists  --position "cn=mail,$ldap_base" --set name="folder" --set description="Shared folders (Kolab 2)"  --set mailPath=1
		univention-admin container/cn create --ignore_exists  --position "cn=mail,$ldap_base" --set name="domain"  --set mailPath=1
		univention-admin container/cn create --ignore_exists  --position "cn=mail,$ldap_base" --set name="mailinglists"  --set mailPath=1
		univention-admin container/cn create --ignore_exists  --position "cn=policies,$ldap_base" --set name="mail"  --set policyPath=1
		univention-admin container/cn create --ignore_exists  --position "cn=temporary,cn=univention,$ldap_base" --set name="mail"

		univention-admin settings/directory modify --dn "cn=default containers,cn=univention,$ldap_base" \
			--append policies=cn=policies,$ldap_base \
			--append policies=cn=desktop,cn=policies,$ldap_base \
			--append policies=cn=shares,cn=policies,$ldap_base \
			--append policies=cn=userquota,cn=shares,cn=policies,$ldap_base \
			--append policies=cn=printquota,cn=shares,cn=policies,$ldap_base \
			--append policies=cn=update,cn=policies,$ldap_base \
			--append policies=cn=ldap,cn=policies,$ldap_base \
			--append policies=cn=installation,cn=update,cn=policies,$ldap_base \
			--append policies=cn=packages,cn=update,cn=policies,$ldap_base \
			--append policies=cn=repository,cn=update,cn=policies,$ldap_base \
			--append policies=cn=dhcp,cn=policies,$ldap_base \
			--append policies=cn=boot,cn=dhcp,cn=policies,$ldap_base \
			--append policies=cn=dns,cn=dhcp,cn=policies,$ldap_base \
			--append policies=cn=dnsupdate,cn=dhcp,cn=policies,$ldap_base \
			--append policies=cn=leasetime,cn=dhcp,cn=policies,$ldap_base \
			--append policies=cn=netbios,cn=dhcp,cn=policies,$ldap_base \
			--append policies=cn=routing,cn=dhcp,cn=policies,$ldap_base \
			--append policies=cn=scope,cn=dhcp,cn=policies,$ldap_base \
			--append policies=cn=statements,cn=dhcp,cn=policies,$ldap_base \
			--append policies=cn=sound,cn=policies,$ldap_base \
			--append policies=cn=thinclient,cn=policies,$ldap_base \
			--append policies=cn=xfree,cn=policies,$ldap_base \
			--append policies=cn=mail,cn=policies,$ldap_base \
			--append policies=cn=windowsinstallations,cn=policies,$ldap_base \
			--append policies=cn=users,cn=policies,$ldap_base \
			--append policies=cn=pwhistory,cn=users,cn=policies,$ldap_base

		univention-admin container/cn create --ignore_exists  --position "cn=policies,$ldap_base" --set name="admin"
		univention-admin container/cn create --ignore_exists  --position "cn=admin,cn=policies,$ldap_base" --set name="user" --set policyPath=1
		univention-admin container/cn create --ignore_exists  --position "cn=admin,cn=policies,$ldap_base" --set name="container" --set policyPath=1
	fi
fi

if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.42-10; then
	eval `univention-baseconfig shell server/role ldap/base`
	if [ "$server_role" = "domaincontroller_master" ]; then
		univention-admin container/cn create --ignore_exists			\
			--set name=admin-settings					\
			--position=cn=users,cn=policies,$ldap_base
		univention-admin policies/admin_user create --ignore_exists		\
			--set name=default-users					\
			--position cn=admin-settings,cn=users,cn=policies,$ldap_base	\
			--set listWizards=None						\
			--set listWebModules=modself					\
			--append selfAttributes=kolabVacationText			\
			--append selfAttributes=kolabVacationActive			\
			--append selfAttributes=kolabDeliveryToFolderActive		\
			--append selfAttributes=kolabDeliveryToFolderName		\
			--append selfAttributes=kolabForwardActive			\
			--append selfAttributes=kolabForwardAddress			\
			--append selfAttributes=kolabForwardKeepCopy			\
			--append selfAttributes=kolabVacationAddress			\
			--append selfAttributes=kolabVacationNoReactDomain		\
			--append selfAttributes=kolabInvitationPolicy			\
			--append selfAttributes=kolabForwardUCE				\
			--set mayOverrideSettings=0
		univention-admin policies/admin_user create --ignore_exists		\
			--set name=default-admins					\
			--position cn=admin-settings,cn=users,cn=policies,$ldap_base	\
			--append emptyAttributes=univentionAdminListWizards		\
			--append emptyAttributes=univentionAdminListWebModules		\
			--set mayOverrideSettings=1
	fi
fi

if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.42-19; then
	eval `univention-baseconfig shell server/role ldap/base domainname ldap/hostdn`
	if [ "$server_role" = "domaincontroller_master" ]; then
		univention-admin computers/domaincontroller_master modify --dn "$ldap_hostdn" --set domain=$domainname
	fi
fi
if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.42-29; then
	eval `univention-baseconfig shell server/role ldap/base domainname ldap/hostdn`
	if [ "$server_role" = "domaincontroller_master" ]; then
		ldapsearch -x '(&(objectClass=univentionPolicyUpdate)(!(univentionUpdateActivate=*)))' -LLL | grep ^dn | sed -e 's|dn: ||' | while read dn; do
			temp=`mktemp`
			echo "dn: $dn"                           >>$temp
			echo "changetype: modify"                >>$temp
			echo "replace: univentionUpdateActivate" >>$temp
			echo "univentionUpdateActivate: TRUE"    >>$temp
			ldapmodify -x -D cn=admin,$ldap_base -w $(cat /etc/ldap.secret) -f $temp
			rm -f $temp
		done
	fi
fi
if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.43-18; then
	eval `univention-baseconfig shell server/role ldap/base domainname ldap/hostdn`
	if [ "$server_role" = "domaincontroller_master" ]; then
		/usr/share/univention-ldap/convert_shadowMax.py
	fi

fi

# add DC Backup Hosts to the other computer groups
if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 1.43-19.170; then
	eval `univention-baseconfig shell server/role ldap/base domainname ldap/hostdn`
	if [ "$server_role" = "domaincontroller_master" ]; then
		univention-admin groups/group modify --dn "cn=DC Backup Hosts,cn=groups,$ldap_base" \
			--append memberOf="cn=DC Slave Hosts,cn=groups,$ldap_base" \
			--append memberOf="cn=Computers,cn=groups,$ldap_base" \
			--append memberOf="cn=Windows Hosts,cn=groups,$ldap_base"

		univention-admin container/cn create --ignore_exists \
			--set name=nfsmounts \
			--position=cn=policies,$ldap_base --set policyPath=1
	fi
fi
if [ "$1" = configure -a -n "$2" ] && dpkg --compare-versions "$2" lt 2.2.3-1; then
	eval `univention-baseconfig shell server/role ldap/base domainname ldap/hostdn`
	if [ "$server_role" = "domaincontroller_master" ]; then
		univention-admin container/cn create --ignore_exists \
			--set name=printservers \
			--position=cn=policies,$ldap_base --set policyPath=1
	fi
fi
exit 0
