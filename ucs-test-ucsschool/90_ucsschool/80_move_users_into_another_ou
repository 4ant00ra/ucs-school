#!/usr/share/ucs-test/runner python
## desc: move user into another school
## roles: [domaincontroller_master, domaincontroller_slave]
## tags: [apptest, ucsschool]
## bugs: [40870]
## exposure: dangerous

from univention.testing.ucsschool import UCSTestSchool
from univention.testing.ucr import UCSTestConfigRegistry
from univention.testing import utils
from ucsschool.lib.models import User
import univention.config_registry


def main():
	if not User.Meta.allow_school_change:
		utils.fail('ERROR: moving users to another school OU is not supported by ucs-school-lib')

	with UCSTestSchool() as env, UCSTestConfigRegistry() as ucr:
		# make sure that nonedu containers are created
		univention.config_registry.handler_set(['ucsschool/ldap/noneducational/create/objects=yes'])

		a, a_dn = env.create_ou(name_edudc=ucr.get('hostname'))
		b, b_dn = env.create_ou(name_edudc=ucr.get('hostname'))

		# TODO: create some classes, workgroups, put into one global group, add exam user
		# TODO: create classes which doesn't exists on school b
		# TODO: change school and uid at once!
		# TODO: user without classes

		users = [
			(env.create_user(a), 'schueler'), # student
			(env.create_user(a, is_teacher=True), 'lehrer'),
			(env.create_user(a, is_staff=True), 'mitarbeiter'),
			(env.create_user(a, is_teacher=True, is_staff=True), 'lehrer'),
		]
		lo = env.open_ldap_connection()
		for (user, dn), roleshare_path, in users:
			user = User.from_dn(dn, a, lo)
			user.custom_dn = None
			user.school = b
			user.move(lo)
			assert user.dn != dn
			assert b in user.dn
			attrs = {
				'homeDirectory': ['/home/%s/%s/%s' % (b, roleshare_path, user.name)],
				'departmentNumber': [b],
				# TODO: add sambaHomeDrive sambaHomePath sambaLogonScript sambaProfilePath
			}
			utils.verify_ldap_object(user.dn, expected_attr=attrs, strict=True, should_exist=True)
			# TODO: check groups, workgroups, classes


if __name__ == '__main__':
	main()
