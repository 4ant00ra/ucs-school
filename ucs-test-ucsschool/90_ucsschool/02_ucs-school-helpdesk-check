#!/usr/share/ucs-test/runner python
## desc: ucs-school-helpdesk-check
## roles: [domaincontroller_master]
## tags: [apptest]
## exposure: safe
## packages:
##   - ucs-school-umc-helpdesk

import univention.testing.ucr as ucr_test
from univention.config_registry import handler_set, handler_unset
from univention.lib.umc_connection import UMCConnection
import sys, os,  subprocess, time
from ucsschool.lib import LDAP_Connection, LDAP_ConnectionError, set_credentials, SchoolSearchBase, SchoolBaseModule
import univention.testing.ucsschool as utu 

def main():
        timeOut = 10
        message = time.time() * 1000
        message = '%.30f' % message
        category = 'Sonstige'
        passwd = 'univention'
        with utu.UCSTestSchool()  as schoolenv:
                schoolName, oudn = schoolenv.create_ou(displayName='')
                userName, userdn = schoolenv.create_user(schoolName, is_teacher=True)
                with ucr_test.UCSTestConfigRegistry() as ucr:
                        ucr.load()
                        handler_set(['ucsschool/helpdesk/recipient=root@localhost'])
                        host = ucr.get('hostname')
                        connection = UMCConnection(host)
                        connection.auth(userName, passwd)
                        print 'User:', userName , ', Password:', passwd, ', Message:', message
                        params = {
                                'username': userName,
                                'school': schoolName,
                                'category': category,
                            'message': message,
                        }
                        result = connection.request('helpdesk/send', params)
                        if result:
                                print 'Message is sent successfully'
                        else:
                                print 'Message was not sent successfully'
        for i in range(0, timeOut):
                if message in open('/var/mail/systemmail').read():
                        returnValue = 0
                        break
                else:
                        returnValue = 1
                        continue
                time.sleep(1)
        return returnValue

if __name__ == '__main__':
        sys.exit(main())