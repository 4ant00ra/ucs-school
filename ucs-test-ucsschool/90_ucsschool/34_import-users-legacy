#!/usr/share/ucs-test/runner python
## -*- coding: utf-8 -*-
## desc: Import users without class via legacy CLI
## tags: [apptest,ucsschool]
## roles: [domaincontroller_master]
## exposure: dangerous
## packages:
##   - ucs-school-import

import shutil
import logging
import sys
import subprocess
import tempfile

import univention.testing.ucr
import univention.testing.strings as uts
import univention.testing.ucsschool as utu
import univention.testing.utils as utils


class Bunch(object):
	"""
	>>> y = Bunch(foo=42, bar='TEST')
	>>> print repr(y.foo), repr(y.bar)
	42 'TEST'

	>>> x = Bunch()
	>>> x.a = 4
	>>> print x.a
	4
	"""
	def __init__(self, **kwds):
		self.__dict__.update(kwds)

	def __str__(self):
		result = []
		for key, value in self.__dict__.iteritems():
			result.append('%s=%r' % (key, value))
		return 'Bunch(' + ', '.join(result) + ')'

	def __repr__(self):
		return str(self)


def write_user_line(fd, ou, is_teacher, is_staff):
	data = {
		'username': uts.random_string(),
		'firstname': uts.random_string(),
		'lastname': uts.random_string(),
		'ou': ou,
		'teacher': '1' if is_teacher else '0',
		'staff': '1' if is_staff else '0',
	}
	line = 'A	%(username)s	%(lastname)%s	%(firstname)s	%(ou)s				%(teacher)s	1	%(staff)s\n'
	fd.write(line % data)


class CLI_Legacy_Import_Tester(object):
	ucr = univention.testing.ucr.UCSTestConfigRegistry()

	def __init__(self):
		self.tmpdir = tempfile.mkdtemp(prefix='34_import-users-legacy.', dir='/tmp/')
		self.log = logging.getLogger('main')
		self.ucr.load()
		self.ou_A = Bunch()

	def cleanup(self):
		self.log.info('Purging %r', self.tmpdir)
		shutil.rmtree(self.tmpdir, ignore_errors=True)

	def run_import(self, fn, fail_on_error=True):
		cmd = ['/usr/share/ucs-school-import/scripts/import_user', fn]
		sys.stdout.flush()
		sys.stderr.flush()
		exitcode = subprocess.call(cmd)
		self.log.info('Import process exited with exit code %r', exitcode)
		if fail_on_error and exitcode:
			self.log.error('Import failed with exit code %r', exitcode)
			utils.fail('Import failed with exit code %r' % (exitcode,))
		return exitcode

	def import_users_with_empty_class(self):
		"""
		Import users with empty class
		"""
		self.log.info('*** Importing users without specified class')
		fn = tempfile.mkstemp(prefix='empty_class.', dir=self.tmpdir)[1]
		with open(fn, 'w') as fd:
			write_user_line(fd, self.ou_A.name, False, False)
			write_user_line(fd, self.ou_A.name, True, False)
			write_user_line(fd, self.ou_A.name, False, True)
			write_user_line(fd, self.ou_A.name, True, True)
		self.run_import(fn)
		self.log.info('*** TEST WAS SUCCESSFUL')

	def run(self):
		try:
			with utu.UCSTestSchool() as schoolenv:
				self.ou_A.name, self.ou_A.dn = schoolenv.create_ou(name_edudc=self.ucr.get('hostname'))

				self.import_users_with_empty_class()
		finally:
			self.cleanup()


def main():
	logging.basicConfig(stream=sys.stdout, level=logging.DEBUG, format='%(levelname)s: %(funcName)s:%(lineno)d: %(message)s')
	tester = CLI_Legacy_Import_Tester()
	tester.run()


if __name__ == '__main__':
	main()
