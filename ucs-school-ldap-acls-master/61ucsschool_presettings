@!@
import sys
sys.path.append('/usr/share/ucs-school-ldap-acls-master/')
import os.path
from acl import AccessRule, By, Who, GroupUniqueMember

else_zero_break = By('*', '+0', 'break')
dc_educational_group = GroupUniqueMember("cn=DC-Edukativnetz,cn=ucsschool,cn=groups,%(ldap/base)s")
member_educational_group = GroupUniqueMember("cn=Member-Edukativnetz,cn=ucsschool,cn=groups,%(ldap/base)s")
dc_administrative_group = GroupUniqueMember("cn=DC-Verwaltungsnetz,cn=ucsschool,cn=groups,%(ldap/base)s")
member_administrative_group = GroupUniqueMember("cn=Member-Verwaltungsnetz,cn=ucsschool,cn=groups,%(ldap/base)s")

dc_educational_group_write = By(dc_educational_group, 'write', 'stop')
member_educational_group_write = By(member_educational_group, 'write', 'stop')
dc_administrative_group_write = By(dc_administrative_group, 'write', 'stop')
member_administrative_group_write = By(member_administrative_group, 'write', 'stop')

dc_educational_group_none = By(dc_educational_group, 'none', 'stop')
member_educational_group_none  = By(member_educational_group, 'none', 'stop')
dc_administrative_group_none = By(dc_administrative_group, 'none', 'stop')
member_administrative_group_none = By(member_administrative_group, 'none', 'stop')

school_groups_write = [dc_administrative_group_write, member_administrative_group_write, dc_educational_group_write, member_educational_group_write, else_zero_break]
school_groups_none= [dc_administrative_group_none, member_administrative_group_none, dc_educational_group_none, member_educational_group_none, else_zero_break]

print '# start 61ucsschool_presettings'

print "# Slave-Controller und Member-Server duerfen Samba-Domaenenobjekt(e) modifizieren"
print AccessRule(
	dn='cn=samba,%(ldap/base)s',
	attrs='children',
	by=school_groups_write,
)
print AccessRule(dn='%(ldap/base)s', dnstyle='children', filter='(objectClass=sambaDomain)', attrs='@sambaDomain', by=school_groups_write)

if os.path.exists('/var/lib/univention-ldap/local-schema/univention-app.schema'):
	print '# grant write access to domaincontroller slave/member server for certain univention app center settings'
	print AccessRule(dn='^univentionAppID=([^,]+),cn=([^,]+),cn=apps,cn=univention,%(ldap/base)s$', dnstyle='regex', filter="(objectClass=univentionApp)", attrs='entry,@univentionApp,@univentionObject', by=school_groups_write)
	print AccessRule(dn='^cn=([^,]+),cn=apps,cn=univention,%(ldap/base)s$', dnstyle='regex', attrs='children,entry,@organizationalRole,@univentionObject', by=school_groups_write)
	print AccessRule(dn='cn=apps,cn=univention,%(ldap/base)s', attrs='children', by=school_groups_write)

if os.path.exists('/usr/share/univention-ldap/schema/univention-virtual-machine-manager.schema'):
	print '# Slave controllers and memberservers require write access to virtual machine manager objects'
	print AccessRule(dn='^univentionVirtualMachineUUID=([^,]+),cn=Information,cn=Virtual Machine Manager,%(ldap/base)s', dnstyle='regex', filter="(objectClass=univentionVirtualMachine)", attrs='entry,@univentionVirtualMachine,@univentionObject', by=school_groups_write)
	print AccessRule(
		dn='^cn=([^,]+),cn=CloudConnection,cn=Virtual Machine Manager,%(ldap/base)s', dnstyle='regex',
		filter="(objectClass=univentionVirtualMachineCloudConnection)",
		attrs='entry,@univentionVirtualMachineCloudConnection,@univentionVirtualMachineHostOC,@univentionObject',
		by=school_groups_write
	)
	print AccessRule(
		dn='cn=(Information|CloudConnection),cn=Virtual Machine Manager,%(ldap/base)s', attrs='children,entry', by=[
			dc_educational_group_write,
			member_educational_group_write,
			dc_administrative_group_write,
			member_administrative_group_write,
			By(Who(dn='^[^,]+,cn=dc,cn=computers,%(ldap/base)s$$', dnstyle='regex'), 'write', 'stop'),
			By(Who(dn='^[^,]+,cn=memberserver,cn=computers,%(ldap/base)s$$', dnstyle='regex'), 'write', 'stop'),
			else_zero_break
		]
	)

print '# Slave-Controller und Member-Server benoetigen idmap-Container'
print AccessRule(dn='cn=idmap,cn=univention,%(ldap/base)s', attrs='children,@organizationalRole,@sambaIdmapEntry,@sambaSidEntry', by=school_groups_write)

print '# Slave-Controller und Member-Server benoetigen ID-Mapping'
print AccessRule(dn='cn=idmap,cn=univention,%(ldap/base)s', dnstyle='children', attrs='entry,@univentionObject,@sambaUnixIdPool,@sambaIdmapEntry,@sambaSidEntry,@organizationalRole', by=school_groups_write)

print '# Slave-Controller und Member-Server benoetigen nicht alle Container'
print AccessRule(dn='cn=backup,%(ldap/base)s', dnstyle='subtree', by=school_groups_none)
print AccessRule(dn='cn=printers,%(ldap/base)s', dnstyle='subtree', by=school_groups_none)
print AccessRule(dn='cn=networks,%(ldap/base)s', dnstyle='subtree', by=school_groups_none)
print AccessRule(dn='^(.*,)?cn=(cups|ppolicy|packages|services|templates|admin-settings|default containers|saml-serviceprovider),cn=univention,%(ldap/base)s$$', dnstyle='regex', by=school_groups_none)
print '# end 61ucsschool_presettings'
@!@
